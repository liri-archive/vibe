import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -noinstantiate -nonrelocatable Vibe.Mpris 1.0 /opt/liri/lib/qml'

Module {
    dependencies: ["QtQuick 2.8"]
    Component {
        name: "Mpris2Engine"
        prototype: "QObject"
        exports: ["Vibe.Mpris/Mpris 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "players"; type: "Mpris2Player"; isList: true; isReadonly: true }
    }
    Component {
        name: "Mpris2Player"
        prototype: "QObject"
        exports: ["Vibe.Mpris/MprisPlayer 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Capability"
            values: {
                "NoCapabilities": 0,
                "CanQuit": 1,
                "CanRaise": 2,
                "CanSetFullscreen": 3,
                "CanControl": 4,
                "CanPlay": 5,
                "CanPause": 6,
                "CanStop": 7,
                "CanSeek": 8,
                "CanGoNext": 9,
                "CanGoPrevious": 10
            }
        }
        Enum {
            name: "Capabilities"
            values: {
                "NoCapabilities": 0,
                "CanQuit": 1,
                "CanRaise": 2,
                "CanSetFullscreen": 3,
                "CanControl": 4,
                "CanPlay": 5,
                "CanPause": 6,
                "CanStop": 7,
                "CanSeek": 8,
                "CanGoNext": 9,
                "CanGoPrevious": 10
            }
        }
        Property { name: "identity"; type: "string"; isReadonly: true }
        Property { name: "iconName"; type: "string"; isReadonly: true }
        Property { name: "capabilities"; type: "Capabilities" }
        Property { name: "metadata"; type: "QQmlPropertyMap"; isReadonly: true; isPointer: true }
        Property { name: "position"; type: "qlonglong"; isReadonly: true }
        Property { name: "status"; type: "string"; isReadonly: true }
        Property { name: "fullScreen"; type: "bool"; isReadonly: true }
        Property { name: "rate"; type: "double"; isReadonly: true }
        Property { name: "minimumRate"; type: "double"; isReadonly: true }
        Property { name: "maximumRate"; type: "double"; isReadonly: true }
        Signal { name: "volumeChanged" }
        Signal { name: "initialFetchFailed" }
        Signal { name: "initialFetchFinished" }
        Method { name: "raise" }
        Method { name: "quit" }
        Method { name: "previous" }
        Method { name: "next" }
        Method { name: "play" }
        Method { name: "pause" }
        Method { name: "playPause" }
        Method { name: "stop" }
        Method {
            name: "seek"
            Parameter { name: "offset"; type: "qlonglong" }
        }
        Method {
            name: "setPosition"
            Parameter { name: "trackId"; type: "string" }
            Parameter { name: "position"; type: "qlonglong" }
        }
        Method {
            name: "openUrl"
            Parameter { name: "url"; type: "QUrl" }
        }
    }
}
